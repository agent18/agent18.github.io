I")<h2 id="remove-git-init">Remove git init</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rm -rf .git
</code></pre></div></div>

<h2 id="folder-to-new-repository-in-github">Folder to new repository in Github?</h2>

<ul>
  <li>
    <p>Go to said folder &amp; :</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  git init

  git add .
	
  git commit -m "First commit"
</code></pre></div>    </div>
  </li>
</ul>

<p><a href="https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/">Source: Github</a></p>

<ul>
  <li>
    <p>Create a new git repository, and don’t add any files in it. No readme
nothing, just an empty repo.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  git remote add origin remote
  https://github.com/username/name-of-repository.git
	
  git push origin master
</code></pre></div>    </div>
  </li>
</ul>

<p>That’s it… type in your credentials.</p>

<hr />

<h2 id="creating-a-new-git-repo-and-connecting-to-local">Creating a new git repo and connecting to local</h2>

<ul>
  <li>
    <p>Create a new repo on Github</p>
  </li>
  <li>
    <p>Open Terminal</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
</code></pre></div>    </div>
  </li>
  <li>
    <p>Add create files you want</p>
  </li>
  <li>
    <p>And then sync with online repo</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  git add -A
  git commit -m "first commit"
  git push
</code></pre></div>    </div>

    <p>That’s it… type in your credentials.</p>
  </li>
</ul>

<hr />

<h2 id="gitignore">.gitignore</h2>

<p>Sometimes you might want to add a .gitignore file to ignore certain
folders or files:</p>

<p>Create the file in the main folder</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>touch .gitignore
</code></pre></div></div>

<p>For ignoring files add <code class="language-plaintext highlighter-rouge">*.filetype</code>. For ignoring folders add
<code class="language-plaintext highlighter-rouge">/ignore-this-folder/</code> followed by <code class="language-plaintext highlighter-rouge">git add</code>, <code class="language-plaintext highlighter-rouge">git commit</code>, <code class="language-plaintext highlighter-rouge">git push</code>
(<a href="https://www.jamescoyle.net/how-to/1094-ignoring-files-in-git-with-gitignore">Source</a>, and <a href="https://github.com/pradeep90/Emacs-Config/blob/master/.gitignore">this</a>). Check your github repo online to see if
the changes are reflected. Mostly not!</p>

<p>So do the following based of of this question: <a href="https://stackoverflow.com/questions/25436312/gitignore-not-working">gitignore not
working</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git rm -rf --cached .
git add .
</code></pre></div></div>

<hr />

<h2 id="changing-name-of-git-repository">Changing name of git repository</h2>

<p><a href="https://help.github.com/articles/renaming-a-repository/">Source</a></p>

<ul>
  <li>
    <p>Change name of repository by going to settings on the repo page</p>
  </li>
  <li>
    <p>Change the repo link on the local git cloned folder</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  git remote set-url origin new_url
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="creating-a-new-branch">Creating a new branch</h2>

<p><a href="https://stackoverflow.com/a/32391944/5986651">Source</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout master

git checkout -b new_branch master

git push origin new_branch
</code></pre></div></div>

<h2 id="going-back-to-older-commit">Going back to older commit</h2>

<p><a href="https://stackoverflow.com/questions/4114095/how-to-revert-a-git-repository-to-a-previous-commit">Source</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git revert --no-commit oldercommit..HEAD
git commit -m "reverted to oldercommit"
</code></pre></div></div>

<h2 id="accidentally-uploading-a-large-file-commit">Accidentally uploading a large file commit</h2>

<p>You get the dreaded git error from remote saying you tried to commit a
large file. In this particular case I had uploaded a file “core” which
is genenrated by linux in case of wierd crashes. No worries. this shit
can be removed peacefully.</p>

<p>I followed the instructions here as it was a recent commit and I had
not done anything after that:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git rm --cached core
git commit --amend -C HEAD

lazygit "comment"
</code></pre></div></div>

<p>and done. :)</p>
:ET